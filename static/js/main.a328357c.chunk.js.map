{"version":3,"sources":["contexts/UserContext.js","assets/loading.svg","components/common/Spinner.js","components/LoginPage/Form.js","pages/LoginPage.js","components/ui/Header.js","components/TimeLinePage/HashtagsContainer.js","components/TimeLinePage/PostForm.js","utils/hashtagParser.js","utils/parseTooltipText.js","components/TimeLinePage/SinglePost.js","pages/TimeLinePage.js","pages/FilteredPostsPage.js","App.js","index.js"],"names":["UserContext","createContext","UserContextProvider","props","useState","token","setToken","user","setUser","signUp","body","a","axios","post","data","alert","response","message","signIn","Provider","value","clearData","children","Spinner","ContainerDiv","LoadingImage","src","loadingGif","alt","styled","div","img","Form","formState","handleChangeFormState","useContext","history","useHistory","email","setEmail","password","setPassword","username","setUsername","pictureUrl","setPictureUrl","loading","setLoading","sendLoginInfo","e","preventDefault","length","push","console","log","registerUser","login","FormContainer","onSubmit","placeholder","type","onChange","target","Button","disabled","ChangeFormButton","onClick","form","button","p","LoginPage","setFormState","MainContainer","LeftContainer","LogoTitle","Subtitle","RightContainer","main","section","h1","h2","Header","showMenu","setShowMenu","toggleMenu","HeaderContainer","to","HeaderMenu","IconFoward","IconBack","ProfilePic","draggable","avatar","MenuOptions","show","pathname","state","isMyLikes","IoIosArrowBack","IoIosArrowForward","HashtagsContainer","trendingHashtags","setTrendingHashtags","search","setSearch","useEffect","fetchTrendingHashtags","get","headers","hashtags","error","searchTag","HashtagsContent","event","onKeyPress","key","map","hash","name","PostForm","userPicture","setRefresh","refresh","link","setLink","text","setText","isLoading","setIsLoading","sendPost","PublishPostContainer","ProfilePicture","PostFormContainer","rows","StyledLink","Link","replaceHashOnText","split","word","i","charAt","wordMinusHash","slice","includes","j","k","parseTooltipText","likedArray","isLiked","newString","likeNames","like","SinglePost","initialState","likes","some","userId","id","setIsLiked","setLikedArray","likePost","likeObj","PostContainer","UserInfoContainer","userName","FullHeartIcon","data-tip","EmptyHeartIcon","PostContentContainer","PreviewContainer","PreviewInfoContainer","linkTitle","linkDescription","href","rel","linkImage","article","IoIosHeartEmpty","IoIosHeart","TimeLinePage","posts","setPosts","offset","setOffset","hasMore","setHasMore","setTimeout","fetchPostsTimeline","oldArray","MainTitle","ContentContainer","PostsSectionContainer","loadMore","loader","FilteredPostsPage","useLocation","params","useParams","isMyPosts","setIsMyPosts","fetchPostsByUser","userPost","fetchPostsByTag","hashtag","fetchPostsMyLikes","App","location","GlobalStyle","TransitionGroup","className","CSSTransition","timeout","enter","exit","classNames","path","component","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a328357c.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { createContext } from \"react\";\n\nconst UserContext = createContext();\nexport default UserContext;\n\nexport const UserContextProvider = (props) => {\n  const [token, setToken] = useState(\"\");\n  const [user, setUser] = useState({});\n\n  const signUp = async (body) => {\n    try {\n      const { data } = await axios.post(\n        `https://mock-api.bootcamp.respondeai.com.br/api/v1/linkr/sign_up`,\n        body\n      );\n      if (data.token) {\n        setToken(data.token);\n        setUser(data.user);\n        return data;\n      }\n    } catch (error) {\n      alert(error.response.data.message);\n      return null;\n    }\n  };\n\n  const signIn = async (body) => {\n    try {\n      const { data } = await axios.post(\n        `https://mock-api.bootcamp.respondeai.com.br/api/v1/linkr/sign_in`,\n        body\n      );\n      if (data.token) {\n        setToken(data.token);\n        setUser(data.user);\n        return data;\n      }\n    } catch (error) {\n      alert(error.response.data.message);\n      return null;\n    }\n  };\n\n\n  const clearData = () => {\n    setUser({});\n    setToken(\"\");\n  };\n\n  return (\n    <UserContext.Provider\n      value={{\n        token,\n        signIn,\n        signUp,\n        user,\n        clearData,\n      }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/loading.b07b324a.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport loadingGif from \"../../assets/loading.svg\";\n\nexport default function Spinner() {\n  return (\n    <ContainerDiv>\n      <LoadingImage src={loadingGif} alt=\"Loading spinner\" />\n    </ContainerDiv>\n  );\n}\n\nconst ContainerDiv = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 50px;\n  width: 100%;\n`;\n\nconst LoadingImage = styled.img`\n  width: 150px;\n  display: block;\n`;\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../../contexts/UserContext\";\nimport styled from \"styled-components\";\nimport Spinner from \"../common/Spinner\";\n\nexport default function Form({ formState, handleChangeFormState }) {\n  const { signIn, signUp } = useContext(UserContext);\n  let history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [pictureUrl, setPictureUrl] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const sendLoginInfo = async (e) => {\n    e.preventDefault();\n    if (email.length === 0 || password.length === 0) {\n      alert(\"Preencha todos os campos\");\n      return;\n    }\n    setLoading(true);\n    const data = await signIn({\n      email: email,\n      password: password,\n    });\n\n    if (data) {\n      history.push(\"/timeline\");\n      setLoading(false);\n    } else {\n      console.log(\"erro\");\n      setLoading(false);\n    }\n  };\n\n  const registerUser = async (e) => {\n    e.preventDefault();\n    if (\n      email.length === 0 ||\n      password.length === 0 ||\n      username.length === 0 ||\n      pictureUrl === 0\n    ) {\n      alert(\"Preencha todos os campos\");\n      return;\n    }\n    setLoading(true);\n    const data = await signUp({\n      email: email,\n      password: password,\n      username: username,\n      pictureUrl: pictureUrl,\n    });\n\n    if (data) {\n      console.log(data);\n      history.push(\"/timeline\");\n      setLoading(false);\n    } else {\n      console.log(\"erro\");\n      setLoading(false);\n    }\n  };\n\n  const login = formState === \"login\";\n\n  if (loading) return <Spinner />;\n\n  return (\n    <FormContainer onSubmit={login ? sendLoginInfo : registerUser}>\n      <input\n        placeholder=\"e-mail\"\n        type=\"email\"\n        onChange={(e) => setEmail(e.target.value)}\n        value={email}\n      />\n      <input\n        placeholder=\"password\"\n        type=\"password\"\n        onChange={(e) => setPassword(e.target.value)}\n        value={password}\n      />\n      {!login && (\n        <>\n          <input\n            placeholder=\"username\"\n            type=\"text\"\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n          />\n          <input\n            placeholder=\"picture url\"\n            type=\"url\"\n            onChange={(e) => setPictureUrl(e.target.value)}\n            value={pictureUrl}\n          />\n        </>\n      )}\n      <Button disabled={loading} type=\"submit\">\n        {login ? \"Log In\" : \"Sign Up\"}\n      </Button>\n      <ChangeFormButton onClick={handleChangeFormState}>\n        {login ? \"First time? Create an account!\" : \"Switch back to log in\"}\n      </ChangeFormButton>\n    </FormContainer>\n  );\n}\n\nconst FormContainer = styled.form`\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 85%;\n  @media (max-width: 768px) {\n    margin: 20px 0;\n  }\n  input {\n    width: 100%;\n    outline: none;\n    border: none;\n    border-radius: 5px;\n    padding: 20px 10px;\n    margin-bottom: 10px;\n    @media (max-width: 768px) {\n      padding: 15px 10px;\n    }\n  }\n  input::placeholder {\n    color: #9f9f9f;\n    font-weight: 700;\n    font-size: 27px;\n    @media (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  background: var(--buttonBlue);\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  padding: 15px 5px;\n  color: white;\n  font-size: 27px;\n  font-family: var(--fontOswald);\n  font-weight: 700;\n  @media (max-width: 768px) {\n    font-size: 22px;\n  }\n`;\n\nconst ChangeFormButton = styled.p`\n  text-decoration: underline;\n  font-family: var(--fontLato);\n  font-size: 20px;\n  margin-top: 20px;\n  cursor: pointer;\n  @media (max-width: 768px) {\n    font-size: 17px;\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport Form from \"../components/LoginPage/Form\";\n\nexport default function LoginPage() {\n  const [formState, setFormState] = useState(\"login\");\n\n  const handleChangeFormState = () => {\n    formState === \"login\" ? setFormState(\"signup\") : setFormState(\"login\");\n  };\n\n  return (\n    <MainContainer>\n      <LeftContainer>\n        <div>\n          <LogoTitle>linkr</LogoTitle>\n          <Subtitle>\n            save, share and discover <br /> the best links on the web\n          </Subtitle>\n        </div>\n      </LeftContainer>\n      <RightContainer>\n        <Form\n          formState={formState}\n          handleChangeFormState={handleChangeFormState}\n        />\n      </RightContainer>\n    </MainContainer>\n  );\n}\n\nconst MainContainer = styled.main`\n  display: flex;\n  height: 100vh;\n  color: white;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst LeftContainer = styled.section`\n  width: 65%;\n  height: 100%;\n  background: var(--backgroundBlack);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 768px) {\n    width: 100%;\n    text-align: center;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n    z-index: 1;\n  }\n`;\n\nconst LogoTitle = styled.h1`\n  font-family: var(--fontLogo);\n  font-weight: 700;\n  font-size: 106px;\n  @media (max-width: 768px) {\n    font-size: 76px;\n  }\n`;\n\nconst Subtitle = styled.h2`\n  font-family: var(--fontOswald);\n  font-weight: 700;\n  font-size: 43px;\n  @media (max-width: 768px) {\n    font-size: 23px;\n  }\n`;\n\nconst RightContainer = styled.section`\n  width: 35%;\n  height: 100%;\n  background: var(--backgroundGray);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 10px 0;\n  }\n`;\n","import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../../contexts/UserContext\";\nimport { Link } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\n\nexport default function Header() {\n  const { user, clearData } = useContext(UserContext);\n  let history = useHistory();\n\n  const [showMenu, setShowMenu] = useState(false);\n\n  const toggleMenu = () => {\n    setShowMenu(!showMenu);\n  };\n\n  const goToMyPosts = () => {\n    history.push(\"/my-posts\");\n  };\n\n  const goToMyLikes = () => {\n    history.push({ \n      pathname: '/my-likes', \n      state: { isMyLikes: true } \n    });\n  };\n\n  const logout = () => {\n    history.push(\"/\");\n    clearData();\n  };\n\n  return (\n    <HeaderContainer>\n      <Link to=\"/timeline\">\n        <LogoTitle>linkr</LogoTitle>\n      </Link>\n      <HeaderMenu>\n        {showMenu ? (\n          <Button onClick={() => toggleMenu()}>\n            <IconFoward />\n          </Button>\n        ) : (\n          <Button onClick={() => toggleMenu()}>\n            <IconBack />\n          </Button>\n        )}\n        <ProfilePic draggable={false} src={user.avatar} />\n        <MenuOptions show={showMenu}>\n          <a onClick={() => goToMyPosts()}>My posts</a>\n          <a onClick={() => goToMyLikes()}>My likes</a>\n          <a onClick={() => logout()}>Logout</a>\n        </MenuOptions>\n      </HeaderMenu>\n    </HeaderContainer>\n  );\n}\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 80px;\n  width: 100vw;\n  background: var(--backgroundBlack);\n  padding: 5px 10px;\n  @media (max-width: 768px) {\n    height: 62px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst HeaderMenu = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  width: 165px;\n  height: 100%;\n`;\n\nconst MenuOptions = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  text-align: center;\n  height: 150px;\n  width: 200px;\n  margin-top: 80px;\n  position: fixed;\n  top: 0px;\n  right: ${(props) =>\n    props.show ? 0 : \"calc(100vw * (-1))\"}; // zero quando for mostrar\n  z-index: 2;\n  transition: 300ms all;\n  background: var(--backgroundBlack);\n  border-bottom-left-radius: 35px;\n  @media (max-width: 768px) {\n    margin-top: 62px;\n    width: 100px;\n    height: 80px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  }\n  a {\n    color: #ffffff;\n    font-family: var(--fontLato);\n    font-size: 26px;\n    cursor: pointer;\n    @media (max-width: 768px) {\n      font-size: 15px;\n    }\n  }\n`;\n\nconst LogoTitle = styled.h1`\n  font-family: var(--fontLogo);\n  font-weight: 700;\n  font-size: 70px;\n  color: #ffffff;\n  margin-left: 10px;\n  @media (max-width: 768px) {\n    font-size: 45px;\n  }\n`;\n\nconst Button = styled.button`\n  background: none;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  :focus {\n    outline: none;\n  }\n`;\n\nconst ProfilePic = styled.img`\n  height: 65px;\n  width: 65px;\n  border-radius: 50%;\n  margin-right: 20px;\n  object-fit: cover;\n  @media (max-width: 768px) {\n    height: 44px;\n    width: 44px;\n  }\n`;\n\nconst IconBack = styled(IoIosArrowBack)`\n  color: white;\n  font-size: 32px;\n\n  @media (max-width: 768px) {\n    font-size: 25px;\n  }\n`;\n\nconst IconFoward = styled(IoIosArrowForward)`\n  color: white;\n  font-size: 32px;\n\n  @media (max-width: 768px) {\n    font-size: 25px;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport default function HashtagsContainer({ token }) {\n  const [trendingHashtags, setTrendingHashtags] = useState([]);\n  const [search, setSearch] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    fetchTrendingHashtags();\n  }, []);\n\n  const fetchTrendingHashtags = async () => {\n    try {\n      const {\n        data,\n      } = await axios.get(\n        \"https://mock-api.bootcamp.respondeai.com.br/api/v1/linkr/hashtags/trending\",\n        { headers: { \"user-token\": token } }\n      );\n      setTrendingHashtags([...data.hashtags]);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      if(search !== ''){\n        searchTag();\n        setSearch('');\n      } else{\n        alert('Preencha o campo para procurar por uma hashtag')\n      }\n    }\n  };\n\n  const searchTag = () => {\n    history.push(`/hashtag/${search}`);\n  }\n\n  return (\n    <HashtagsContent>\n      <textarea \n        type=\"text\" \n        placeholder=\"Search for a hashtag\" \n        value={search} \n        onChange={(event) => {\n          setSearch(event.target.value);\n        }}\n        onKeyPress={handleKeyPress}\n        >\n      </textarea>\n      <h2>trending</h2>\n      <div />\n      <ul>\n        {trendingHashtags.map((hash) => (\n          <Link key={hash.name} to={`/hashtag/${hash.name}`}>\n            <li># {hash.name}</li>\n          </Link>\n        ))}\n      </ul>\n    </HashtagsContent>\n  );\n}\n\nconst HashtagsContent = styled.section`\n  width: 32%;\n  height: 100%; \n  background: var(--backgroundBlack);\n  border-radius: 10px;\n  color: white;\n  padding: 5px;\n  @media (max-width: 768px) {\n    display: none;\n  }\n  h2 {\n    font-family: var(--fontOswald);\n    font-weight: bold;\n    font-size: 27px;\n    margin: 20px 10px;\n  }\n  div {\n    border-top: 1px solid #484848;\n    width: 100%;\n  }\n  ul {\n    margin: 20px 10px;\n    li {\n      margin-bottom: 8px;\n      font-family: var(--fontLato);\n      font-weight: bold;\n      font-size: 19px;\n    }\n  }\n\n  textarea{\n    resize: none;\n    height: 65px;\n    width: 100%;\n    padding: 14px 0 0 14px;\n    font-size: 20px;\n    border-radius: 5px;\n  }\n\n  textarea:focus{\n    outline: none;\n  }\n`;\n","import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nimport UserContext from \"../../contexts/UserContext\";\n\nexport default function PostForm({ userPicture, setRefresh, refresh }) {\n  const [link, setLink] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const { token } = useContext(UserContext);\n\n  const sendPost = async (e) => {\n    e.preventDefault();\n    if (link.length === 0) {\n      alert(\"Campo de link obrigatorio\");\n      return;\n    }\n    setIsLoading(true);\n    const post = { link, text };\n\n    try {\n      await axios.post(\n        `https://mock-api.bootcamp.respondeai.com.br/api/v1/linkr/posts`,\n        post,\n        {\n          headers: {\n            \"user-token\": `${token}`,\n          },\n        }\n      );\n      console.log(\"enviado com sucesso\");\n      setRefresh(!refresh);\n      setLink(\"\");\n      setText(\"\");\n    } catch (error) {\n      alert(\"Houve um erro ao publicar seu link\");\n      console.error(error);\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <PublishPostContainer>\n      <ProfilePicture src={userPicture} alt=\"profile\" />\n      <PostFormContainer onSubmit={sendPost}>\n        <h3>O que voce tem pra favoritar hoje?</h3>\n        <input\n          placeholder=\"http://...\"\n          type=\"url\"\n          value={link}\n          onChange={(e) => setLink(e.target.value)}\n          disabled={isLoading}\n        />\n        <textarea\n          rows=\"3\"\n          placeholder=\"Muito irado esse link falando de #javascript\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          disabled={isLoading}\n        />\n        <Button type=\"submit\" disabled={isLoading}>\n          {isLoading ? \"Publishing...\" : \"Publicar\"}\n        </Button>\n      </PostFormContainer>\n    </PublishPostContainer>\n  );\n}\n\nconst PublishPostContainer = styled.section`\n  width: 100%;\n  background: white;\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  border-radius: 16px;\n  margin-bottom: 10px;\n  @media (max-width: 768px) {\n    border-radius: 0;\n  }\n`;\n\nconst PostFormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-grow: 1;\n  h3 {\n    font-family: var(--fontLato);\n    font-size: 20px;\n    font-weight: 300;\n    color: #707070;\n    margin-bottom: 8px;\n    @media (max-width: 768px) {\n      font-size: 17px;\n    }\n  }\n  input,\n  textarea {\n    width: 100%;\n    background: #efefef;\n    border: none;\n    outline: none;\n    border-radius: 5px;\n    margin-bottom: 8px;\n    padding: 5px;\n  }\n  textarea {\n    resize: none;\n  }\n  input::placeholder,\n  textarea::placeholder {\n    font-family: var(--fontLato);\n    font-weight: 300;\n    font-size: 15px;\n    @media (max-width: 768px) {\n      font-size: 13px;\n    }\n  }\n`;\n\nconst ProfilePicture = styled.img`\n  height: 50px;\n  width: 50px;\n  border-radius: 50%;\n  margin-right: 15px;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst Button = styled.button`\n  background: ${(props) => (props.disabled ? \"gray\" : \"#1877F2\")};\n  border-radius: 5px;\n  width: 112px;\n  border: none;\n  outline: none;\n  color: white;\n  padding: 5px 10px;\n  align-self: flex-end;\n  cursor: pointer;\n  @media (max-width: 768px) {\n    font-size: 13px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst replaceHashOnText = (post) => {\n  return post.text.split(\" \").map((word, i) => {\n    if (word.charAt(0) === \"#\") {\n      const wordMinusHash = word.slice(1);\n      if (word.includes(\",\")) {\n        const newWordArr = word.split(\",\");\n        return newWordArr.map((word, j) => (\n          <StyledLink key={j} to={`/hashtag/${word.slice(1)}`}>\n            {\" \"}\n            {word}\n          </StyledLink>\n        ));\n      }\n      if (wordMinusHash.includes(\"#\")) {\n        const newWordArr = word.split(\"#\");\n        return newWordArr.map((word, k) => (\n          <StyledLink key={k} to={`/hashtag/${word}`}>\n            {\" \"}\n            #{word}\n          </StyledLink>\n        ));\n      }\n      return (\n        <StyledLink key={i} to={`/hashtag/${word.slice(1)}`}>\n          {\" \"}\n          {word}\n        </StyledLink>\n      );\n    }\n    return ` ${word} `;\n  });\n};\n\nconst StyledLink = styled(Link)`\n  color: white;\n  font-weight: bold;\n`;\n\nexport default replaceHashOnText;\n","const parseTooltipText = (likedArray, isLiked) => {\n  let newString = \"\";\n  if (likedArray.length === 0) return \"Sem curtidas\";\n  const likeNames = likedArray.map((like) => like[\"user.username\"]);\n  if (isLiked) {\n    if (likeNames.length === 1) return \"Voce curtiu isso\";\n    newString = `Voce, ${likeNames[0]} e outras ${\n      likeNames.length - 2\n    } pessoas `;\n  } else {\n    if (likeNames.length === 1) return `${likeNames[0]} curtiu isso`;\n    newString = `${likeNames[0]}, ${likeNames[1]} e outras ${\n      likeNames.length - 2\n    } pessoas`;\n  }\n  return newString;\n};\n\nexport default parseTooltipText;\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { IoIosHeartEmpty, IoIosHeart } from \"react-icons/io\";\nimport ReactTooltip from \"react-tooltip\";\nimport axios from \"axios\";\n\nimport replaceHashOnText from \"../../utils/hashtagParser\";\nimport parseTooltipText from \"../../utils/parseTooltipText\";\nimport UserContext from \"../../contexts/UserContext\";\n\nexport default function SinglePost({ post }) {\n  const { user, token } = useContext(UserContext);\n  const initialState = post.likes.some((like) => like.userId === user.id);\n  const [isLiked, setIsLiked] = useState(initialState);\n  const [likedArray, setLikedArray] = useState(post.likes);\n\n  const likePost = async () => {\n    if (!isLiked) {\n      try {\n        const likeObj = { id: user.id, username: user.username };\n        const {\n          data,\n        } = await axios.post(\n          `https://mock-api.bootcamp.respondeai.com.br/api/v1/linkr/posts/${post.id}/like`,\n          likeObj,\n          { headers: { \"user-token\": token } }\n        );\n        setLikedArray([...data.post.likes]);\n        setIsLiked(!isLiked);\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      try {\n        const likeObj = { id: user.id, username: user.username };\n        const {\n          data,\n        } = await axios.post(\n          `https://mock-api.bootcamp.respondeai.com.br/api/v1/linkr/posts/${post.id}/dislike`,\n          likeObj,\n          { headers: { \"user-token\": token } }\n        );\n        setIsLiked(!isLiked);\n        setLikedArray([...data.post.likes]);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  return (\n    <PostContainer>\n      <UserInfoContainer>\n        <Link\n          to={{\n            pathname: `/user/${post.user.id}`,\n            state: { userName: post.user.username },\n          }}\n        >\n          <ProfilePicture src={post.user.avatar} alt=\"profile\" />\n        </Link>\n        <ReactTooltip />\n        {isLiked ? (\n          <FullHeartIcon\n            onClick={likePost}\n            data-tip={parseTooltipText(likedArray, isLiked)}\n          />\n        ) : (\n          <EmptyHeartIcon\n            onClick={likePost}\n            data-tip={parseTooltipText(likedArray, isLiked)}\n          />\n        )}\n      </UserInfoContainer>\n      <PostContentContainer>\n        <h3>{post.user.username}</h3>\n        <p>{replaceHashOnText(post)}</p>\n        <PreviewContainer>\n          <PreviewInfoContainer>\n            <h3>{post.linkTitle}</h3>\n            <p>{post.linkDescription}</p>\n            <a href={post.link} target=\"_blank\" rel=\"noreferrer\">\n              {post.link}\n            </a>\n          </PreviewInfoContainer>\n          <img src={post.linkImage} alt=\"link preview\" />\n        </PreviewContainer>\n      </PostContentContainer>\n    </PostContainer>\n  );\n}\n\nconst PostContainer = styled.article`\n  background: var(--backgroundBlack);\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  border-radius: 16px;\n  margin-top: 20px;\n  width: 100%;\n  @media (max-width: 768px) {\n    border-radius: 0;\n    margin-top: 10px;\n  }\n`;\n\nconst PostContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 85%;\n  font-family: var(--fontLato);\n  word-break: break-all;\n\n  h3 {\n    font-size: 19px;\n    color: white;\n    margin-bottom: 10px;\n    @media (max-width: 768px) {\n      font-size: 17px;\n    }\n  }\n  p {\n    color: #b7b7b7;\n    font-size: 17px;\n    @media (max-width: 768px) {\n      font-size: 15px;\n    }\n  }\n`;\n\nconst UserInfoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 15%;\n  margin-right: 10px;\n  @media (max-width: 768px) {\n    width: 10%;\n  }\n`;\n\nconst EmptyHeartIcon = styled(IoIosHeartEmpty)`\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n`;\n\nconst FullHeartIcon = styled(IoIosHeart)`\n  color: red;\n  font-size: 24px;\n  cursor: pointer;\n`;\n\nconst ProfilePicture = styled.img`\n  height: 50px;\n  width: 50px;\n  border-radius: 50%;\n  margin-bottom: 20px;\n  @media (max-width: 768px) {\n    height: 40px;\n    width: 40px;\n  }\n`;\n\nconst PreviewContainer = styled.div`\n  width: 100%;\n  margin-top: 20px;\n  border: 1px solid #4d4d4d;\n  border-radius: 16px;\n  height: 155px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  overflow: hidden;\n  img {\n    display: block;\n    width: 30%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst PreviewInfoContainer = styled.div`\n  padding: 20px;\n  width: 68%;\n  h3 {\n    font-size: 16px;\n    @media (max-width: 768px) {\n      font-size: 11px;\n    }\n  }\n  p {\n    font-size: 11px;\n    @media (max-width: 768px) {\n      font-size: 9px;\n    }\n  }\n  a {\n    display: inline-block;\n    margin-top: 20px;\n    font-size: 11px;\n    color: #cecece;\n    @media (max-width: 768px) {\n      font-size: 9px;\n    }\n  }\n`;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport Header from \"../components/ui/Header\";\nimport UserContext from \"../contexts/UserContext\";\nimport HashtagsContainer from \"../components/TimeLinePage/HashtagsContainer\";\nimport PostForm from \"../components/TimeLinePage/PostForm\";\nimport SinglePost from \"../components/TimeLinePage/SinglePost\";\nimport Spinner from \"../components/common/Spinner\";\n\nexport default function TimeLinePage() {\n  const { user, token } = useContext(UserContext);\n  const history = useHistory();\n\n  const [posts, setPosts] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [refresh, setRefresh] = useState(false);\n\n  useEffect(() => {\n    if(refresh){\n      setPosts([]);\n      setTimeout(fetchPostsTimeline(), 2000);\n    }\n    if(!token){\n      history.push('/');\n    }\n  }, [refresh]);\n\n  const fetchPostsTimeline = async () => {\n    if(refresh){\n      setOffset(0);\n      setRefresh(false);  \n    }\n    try {\n      const { data } = await axios.get(\n        `https://mock-api.bootcamp.respondeai.com.br/api/v1/linkr/posts?offset=${offset}&limit=10`,\n        {\n          headers: {\n            \"user-token\": `${token}`,\n          },\n        }\n      );\n      if(data.posts.length == 0){\n        setHasMore(false);\n      }\n      setOffset(offset + 10);\n      setPosts((oldArray) => [...oldArray, ...data.posts]);\n    } catch (error) {\n      console.error(error);\n      alert(\"Houve uma falha ao obter os posts, por favor atualize a página\");\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <MainContainer>\n        <MainTitle>timeline</MainTitle>\n        <ContentContainer>\n          <PostsSectionContainer>\n            <PostForm\n              userPicture={user.avatar}\n              setRefresh={setRefresh}\n              refresh={refresh}\n            />\n            {refresh? <Spinner />\n            :\n              <InfiniteScroll\n                loadMore={fetchPostsTimeline}\n                loader={<Spinner />}\n                hasMore={hasMore}\n              >\n                {(posts.length === 0)? \n                  \"Nenhum post encontrado\"\n                :\n                  posts.map((post) => <SinglePost key={post.id} post={post} />)\n                }\n              </InfiniteScroll>\n            }\n          </PostsSectionContainer>\n          <HashtagsContainer token={token} />\n        </ContentContainer>\n      </MainContainer>\n    </>\n  );\n}\n\nconst MainContainer = styled.main`\n  margin-top: 80px;\n  background: var(--backgroundGray);\n  height: calc(100% - 80px);\n  min-height: 100vh;\n  padding: 0 15%;\n  padding-bottom: 50px;\n  @media (max-width: 768px) {\n    padding: 0 0 50px 0;\n    margin-top: 62px;\n  }\n`;\n\nconst MainTitle = styled.h1`\n  font-family: var(--fontOswald);\n  font-weight: 700;\n  font-size: 43px;\n  color: white;\n  padding: 53px 0;\n  @media (max-width: 768px) {\n    padding: 20px 10px;\n    font-size: 33px;\n  }\n`;\n\nconst ContentContainer = styled.section`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst PostsSectionContainer = styled.section`\n  width: 66%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport InfiniteScroll from 'react-infinite-scroller'; \n\n\nimport Header from \"../components/ui/Header\";\nimport { useLocation } from \"react-router-dom\";\nimport UserContext from \"../contexts/UserContext\";\nimport HashtagsContainer from \"../components/TimeLinePage/HashtagsContainer\";\nimport SinglePost from \"../components/TimeLinePage/SinglePost\";\nimport Spinner from \"../components/common/Spinner\";\n\nexport default function FilteredPostsPage() {\n  const { user, token } = useContext(UserContext);\n  const { state } = useLocation();\n  const params = useParams();\n\n  const [posts, setPosts] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [isMyPosts, setIsMyPosts] = useState(false);\n\n\n  const fetchPosts = () => {\n    if (params.id) {\n      fetchPostsByUser();\n    } else if (params.hashtag) {\n      fetchPostsByTag(false);\n    } else if (state.isMyLikes) {\n      fetchPostsMyLikes();\n    } else {\n      setIsMyPosts(true);\n      fetchPostsByUser(true);\n    }\n  };\n\n  const fetchPostsByUser = async (userPost) => {\n    try {\n      const { data } = await axios.get(\n        `https://mock-api.bootcamp.respondeai.com.br/api/v1/linkr/users/${\n          userPost ? user.id : params.id\n        }/posts?offset=${offset}&limit=10`,\n        {\n          headers: {\n            \"user-token\": `${token}`,\n          },\n        }\n      );\n      if(data.posts.length == 0){\n        setHasMore(false);\n      }\n      setOffset(offset + 10);\n      setPosts((oldArray) => [...oldArray, ...data.posts]);\n    } catch (error) {\n      console.error(error);\n      alert(\"Houve uma falha ao obter os posts, por favor atualize a página\");\n    }\n  };\n\n  const fetchPostsByTag = async () => {\n    try {\n      const { data } = await axios.get(\n        `https://mock-api.bootcamp.respondeai.com.br/api/v1/linkr/hashtags/${params.hashtag}/posts?offset=${offset}&limit=10`,\n        {\n          headers: {\n            \"user-token\": `${token}`,\n          },\n        }\n      );\n      if(data.posts.length == 0){\n        setHasMore(false);\n      }\n      setOffset(offset + 10);\n      setPosts((oldArray) => [...oldArray, ...data.posts]);\n    } catch (error) {\n      console.error(error);\n      alert(\"Houve uma falha ao obter os posts, por favor atualize a página\");\n    }\n  };\n\n  const fetchPostsMyLikes = async () => { //MUDAR esperando endpoint my-likes\n    try {\n      const { data } = await axios.get(\n        `https://mock-api.bootcamp.respondeai.com.br/api/v1/linkr/users/${user.id}/posts?offset=${offset}&limit=10`,\n        {\n          headers: {\n            \"user-token\": `${token}`,\n          },\n        }\n      );\n      if(data.posts.length == 0){\n        setHasMore(false);\n      }\n      setOffset(offset + 10);\n      setPosts((oldArray) => [...oldArray, ...data.posts]);\n    } catch (error) {\n      console.error(error);\n      alert(\"Houve uma falha ao obter os posts, por favor atualize a página\");\n    }\n  };\n\n\n  return (\n    <>\n      <Header />\n      <MainContainer>\n        <MainTitle>\n          {isMyPosts\n            ? \"My Posts\"\n            : params.hashtag\n            ? `#${params.hashtag}`\n            : `${state && state.userName}'s posts`}\n        </MainTitle>\n        <ContentContainer>\n          <PostsSectionContainer>\n            <InfiniteScroll\n              loadMore={fetchPosts}\n              loader={<Spinner />}\n              hasMore={hasMore}\n            >\n              {(posts.length === 0)? \n                \"Nenhum post encontrado\"\n              :\n                posts.map((post) => <SinglePost key={post.id} post={post} />)\n              }\n            </InfiniteScroll>\n          </PostsSectionContainer>\n          <HashtagsContainer token={token} />\n        </ContentContainer>\n      </MainContainer>\n    </>\n  );\n}\n\nconst MainContainer = styled.main`\n  margin-top: 80px;\n  background: var(--backgroundGray);\n  height: calc(100% - 80px);\n  min-height: 100vh;\n  padding: 0 15%;\n  padding-bottom: 50px;\n  @media (max-width: 768px) {\n    margin-top: 62px;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst MainTitle = styled.h1`\n  font-family: var(--fontOswald);\n  font-weight: 700;\n  font-size: 43px;\n  color: white;\n  padding: 53px 0;\n  @media (max-width: 768px) {\n    font-size: 33px;\n    padding: 20px 0;\n  }\n`;\n\nconst ContentContainer = styled.section`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst PostsSectionContainer = styled.section`\n  width: 66%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n","import React from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport \"./reset.css\";\nimport LoginPage from \"./pages/LoginPage\";\nimport TimeLinePage from \"./pages/TimeLinePage\";\nimport { UserContextProvider } from \"./contexts/UserContext\";\nimport FilteredPostsPage from \"./pages/FilteredPostsPage\";\n\nfunction App() {\n  let location = useLocation();\n\n  return (\n    <>\n      <UserContextProvider>\n        <GlobalStyle />\n        <TransitionGroup className=\"transition-group\">\n          <CSSTransition\n            key={location.key}\n            timeout={{ enter: 300, exit: 300 }}\n            classNames={\"fade\"}\n          >\n            <section className=\"route-section\">\n              <Switch location={location}>\n                <Route path=\"/\" component={LoginPage} />\n                <Route path=\"/timeline\" component={TimeLinePage} />\n                <Route path=\"/my-posts\" component={FilteredPostsPage} />\n                <Route path=\"/my-likes\" component={FilteredPostsPage} />\n                <Route path=\"/hashtag/:hashtag\" component={FilteredPostsPage} />\n                <Route path=\"/user/:id\" component={FilteredPostsPage} />\n              </Switch>\n            </section>\n          </CSSTransition>\n        </TransitionGroup>\n      </UserContextProvider>\n    </>\n  );\n}\nexport default App;\n\nconst GlobalStyle = createGlobalStyle`\n:root {\n  --backgroundBlack: #151515;\n  --backgroundGray: #333333;\n  --buttonBlue: #1877F2;\n  --fontLogo: 'Passion One', cursive;\n  --fontOswald: 'Oswald', sans-serif;\n  --fontLato: 'Lato', sans-serif;\n}\n\nbody {\n  font-family: var(--fontOswald);\n}\n\n// transition effect\n\n.fade-enter {\n  opacity: 0.01;\n}\n.fade-enter.fade-enter-active {\n  opacity: 1;\n  transition: opacity 300ms ease-in;\n}\n.fade-exit {\n  opacity: 1;\n}\n.fade-exit.fade-exit-active {\n  opacity: 0.01;\n  transition: opacity 300ms ease-in;\n}\ndiv.transition-group {\n  position: relative;\n}\nsection.route-section {\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n\n\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}